name: CI/CD Pipeline

on:
  push:
    branches: 
      - 'develop'
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
      - 'release/**'
      - '!master'
      - '!stagging'
  pull_request:
    branches: [ master, stagging, develop ]

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.15.1'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test || echo "No tests found"
        
    - name: Build project
      run: npm run build

  deploy-to-vercel:
    name: Deploy to Vercel (Staging)
    needs: ci
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'stagging'
    runs-on: ubuntu-latest
    
    steps:
        - uses: actions/checkout@v3
        
        - name: Debug secrets availability
          run: |
            echo "VERCEL_TOKEN est치 configurado: ${{ secrets.VERCEL_TOKEN != '' }}"
            echo "VERCEL_ORG_ID est치 configurado: ${{ secrets.VERCEL_ORG_ID != '' }}"
            echo "VERCEL_PROJECT_ID est치 configurado: ${{ secrets.VERCEL_PROJECT_ID != '' }}"
        
        - name: Deploy to Vercel
          env:
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
            VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          run: |
            # Instalar Vercel CLI
            npm install -g vercel
            
            # Crear archivo de configuraci칩n
            mkdir -p .vercel
            echo "{\"orgId\":\"$VERCEL_ORG_ID\",\"projectId\":\"$VERCEL_PROJECT_ID\"}" > .vercel/project.json
            
            # Desplegar a Vercel
            vercel --prod --token=$VERCEL_TOKEN --yes